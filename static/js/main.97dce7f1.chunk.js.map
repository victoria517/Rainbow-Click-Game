{"version":3,"sources":["components/NavBar.js","components/Banner.js","components/IconCard.js","App.js","index.js"],"names":["style","bgDark","backgroundColor","NavBar","props","react_default","a","createElement","className","title","status","currentScore","topScore","logoIcon","width","heigth","Banner","IconCard","id","value","onClick","clickedPlayer","src","image","alt","shuffleArray","array","counter","length","index","Math","floor","random","temp","App","state","result","clicked","Icons","gameOver","console","log","concat","_this","includes","resetGame","pointIncrease","push","setState","score","resetIconArray","points","newScramble","this","_this2","components_NavBar","components_Banner","map","icon","components_IconCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"u6CAEMA,SAAQ,CACZC,OAAQ,CACNC,gBAAe,gBAmBJC,EAfA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,UAAQP,MAAOA,EAAMC,OAAQO,UAAU,wCACrCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBC,MAAM,SAC5CJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,WAA+CJ,EAAMM,QACrDL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBC,MAAM,SAA5C,UACUL,EAAMO,cAEhBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBC,MAAM,WAAxC,cACcL,EAAMQ,aCfpBZ,EAAQ,CACZa,SAAU,CACRC,MAAO,IACPC,OAAQ,KAEVd,OAAQ,CACNC,gBAAe,eAcJc,EAVA,SAAAZ,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEP,MAAOA,EAAMC,OACbO,UAAU,oEAEVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uDAAd,qECFWS,EAbE,SAAAb,GAAK,OACpBC,EAAAC,EAAAC,cAAA,WACEW,GAAId,EAAMc,GACVV,UAAU,4CACVW,MAAOf,EAAMc,GACbE,QAAS,kBAAMhB,EAAMiB,cAAcjB,EAAMc,MAEzCb,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,OAAKe,IAAKlB,EAAMmB,MAAOf,UAAU,KAAKgB,IAAI,wBCI1CC,SAAe,SAAAC,GAGnB,IAFA,IAAIC,EAAUD,EAAME,OAEbD,EAAU,GAAG,CAElB,IAAIE,EAAQC,KAAKC,MAAMD,KAAKE,SAAWL,GAInCM,EAAOP,IAFXC,GAGAD,EAAMC,GAAWD,EAAMG,GACvBH,EAAMG,GAASI,EAEjB,OAAOP,IA0GMQ,6MAvGbC,MAAQ,CACNxB,aAAc,EACdC,SAAU,EACVwB,OAAQ,GACRC,QAAS,GACTC,QACAC,UAAU,KAWZlB,cAAgB,SAAAH,GACdsB,QAAQC,IAAR,4BAAAC,OAAwCxB,IACnCyB,EAAKR,MAAME,QAAQO,SAAS1B,GAO/ByB,EAAKE,aANLF,EAAKG,gBACLH,EAAKR,MAAME,QAAQU,KAAK7B,GACxByB,EAAKK,SAAS,CACZT,UAAU,QAShBO,cAAgB,WACd,IAAIG,EAAQN,EAAKR,MAAMxB,aAAe,EACtC6B,QAAQC,IAAR,gBAAAC,OAA4BO,IACxBA,IAAUN,EAAKR,MAAMG,MAAMV,OAC7Be,EAAKK,SAAS,CACZZ,OAAQ,yCACRxB,SAAUqC,EACVtC,aAAc,EACd0B,QAAS,GACTC,QACAC,UAAU,IAEHU,EAAQN,EAAKR,MAAMvB,SAC5B+B,EAAKK,SAAS,CACZpC,SAAUqC,EACVtC,aAAcsC,EACdb,OAAQ,6BAGVO,EAAKK,SAAS,CACZrC,aAAcsC,EACdb,OAAQ,aAGZO,EAAKO,oBAIPL,UAAY,WACVF,EAAKK,SAAS,CACZG,OAAQ,EACRxC,aAAc,EACdC,SAAU+B,EAAKR,MAAMvB,SACrBwB,OAAQ,YACRC,QAAS,GACTC,QACAC,UAAU,IAEZC,QAAQC,IAAI,cAAeE,EAAKR,MAAMI,UACtCI,EAAKO,oBAIPA,eAAiB,WACf,IAAIE,EAAc3B,EAAaa,GAC/BK,EAAKK,SAAS,CAAEV,MAAOc,wFAjEvBC,KAAKL,SAAS,CAAEZ,OAAQ,mEAoEjB,IAAAkB,EAAAD,KACP,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgD,EAAD,CACE3C,SAAUyC,KAAKlB,MAAMvB,SACrBD,aAAc0C,KAAKlB,MAAMxB,aACzBD,OAAQ2C,KAAKlB,MAAMC,SAErB/B,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ6C,KAAKlB,MAAMG,MAAMmB,IAAI,SAAAC,GAAI,OACxBrD,EAAAC,EAAAC,cAACoD,EAAD,CACEzC,GAAIwC,EAAKxC,GACTK,MAAOmC,EAAKnC,MACZF,cAAeiC,EAAKjC,2BA/FhBuC,aCxBlBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.97dce7f1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst style = {\n  bgDark: {\n    backgroundColor: `rgb(1,0,1)`\n  }\n};\n\nconst NavBar = props => (\n  <header style={style.bgDark} className=\" w-100 ph3 pv3 pv2-ns ph4-m ph5-l tc\">\n    <nav className=\"f6 fw6 ttu tracked\">\n      <p className=\"link dim white dib mr3\" title=\"Home\" />\n      <p className=\"link dim white dib mr3\">Status: {props.status}</p>\n      <p className=\"link dim white dib mr3\" title=\"Store\">\n        Score: {props.currentScore}\n      </p>\n      <p className=\"link dim white dib\" title=\"Contact\">\n        Top Score: {props.topScore}\n      </p>\n    </nav>\n  </header>\n);\n\nexport default NavBar;\n","import React from \"react\";\n\nconst style = {\n  logoIcon: {\n    width: 150,\n    heigth: 100\n  },\n  bgDark: {\n    backgroundColor: `rgb(1,0,1)`\n  }\n};\n\nconst Banner = props => (\n  <article\n    style={style.bgDark}\n    className=\"mw7 center ph3 ph5-ns tc br2 pv3 bg-black-90 mb5 animated fadeIn\"\n  >\n    <h2 className=\"fw2 f4 lh-copy mt0 mb3 white animated fadeIn slower\">\n      Click on an image to earn points, but don't click on any twice!\n    </h2>\n  </article>\n);\nexport default Banner;\n","import React from \"react\";\n\nconst IconCard = props => (\n  <section\n    id={props.id}\n    className=\"tc pa3 hvr-float-shadow animated zoomInUp\"\n    value={props.id}\n    onClick={() => props.clickedPlayer(props.id)}\n  >\n    <article className=\"w4 pa2 \">\n      <img src={props.image} className=\"db\" alt=\"game-char\" />\n    </article>\n  </section>\n);\n\nexport default IconCard;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//  my compoenent\nimport NavBar from \"./components/NavBar\";\nimport Banner from \"./components/Banner\";\nimport IconCard from \"./components/IconCard\";\nimport Icons from \"./icons.json\";\n//\nimport \"./components/IconCard.css\";\n//\n// import \"tachyons\";\n// import \"hover\";\n// import \"animate\";\n\nconst shuffleArray = array => {\n  let counter = array.length;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    let index = Math.floor(Math.random() * counter);\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element with it\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n};\nclass App extends Component {\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    result: \"\",\n    clicked: [],\n    Icons,\n    gameOver: false\n  };\n\n  // When the page loads and the component mounts,\n  // display starting message\n  componentDidMount() {\n    this.setState({ result: \"Click a player to get started\" });\n  }\n\n  // When a player gets clicked,\n  // increase points and add id of element to array.\n  clickedPlayer = id => {\n    console.log(`Picture clicked with id: ${id}`);\n    if (!this.state.clicked.includes(id)) {\n      this.pointIncrease();\n      this.state.clicked.push(id);\n      this.setState({\n        gameOver: false\n      });\n    } else {\n      this.resetGame();\n    }\n  };\n\n  // When the user makes a new click, increment the points by 1\n  // and check if the user has won\n  pointIncrease = () => {\n    let score = this.state.currentScore + 1;\n    console.log(`the score is ${score}`);\n    if (score === this.state.Icons.length) {\n      this.setState({\n        result: \"You win! Start clicking to play again!\",\n        topScore: score,\n        currentScore: 0,\n        clicked: [],\n        Icons,\n        gameOver: false\n      });\n    } else if (score > this.state.topScore) {\n      this.setState({\n        topScore: score,\n        currentScore: score,\n        result: \"Correct! New high score!\"\n      });\n    } else {\n      this.setState({\n        currentScore: score,\n        result: \"Correct!\"\n      });\n    }\n    this.resetIconArray();\n  };\n\n  // reset the game when the user chooses a duplicate\n  resetGame = () => {\n    this.setState({\n      points: 0,\n      currentScore: 0,\n      topScore: this.state.topScore,\n      result: \"You Loss!\",\n      clicked: [],\n      Icons,\n      gameOver: true\n    });\n    console.log(\"Game over? \", this.state.gameOver);\n    this.resetIconArray();\n  };\n\n  // set the array to be mapped to a new scrambled version using shuffle algorithm\n  resetIconArray = () => {\n    let newScramble = shuffleArray(Icons);\n    this.setState({ Icons: newScramble });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar\n          topScore={this.state.topScore}\n          currentScore={this.state.currentScore}\n          status={this.state.result}\n        />\n        <Banner />\n        <div className=\"mainStyle\">\n          {this.state.Icons.map(icon => (\n            <IconCard\n              id={icon.id}\n              image={icon.image}\n              clickedPlayer={this.clickedPlayer}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}